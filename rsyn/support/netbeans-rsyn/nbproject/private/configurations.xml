<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="../../src" name="0">
      <df name="contests">
        <df name="iccad15">
          <in>Infrastructure.cpp</in>
          <in>Infrastructure.h</in>
          <in>utilICCAD15.h</in>
        </df>
        <df name="ispd13">
          <in>global.h</in>
        </df>
        <df name="ispd16">
          <in>ABU.cpp</in>
          <in>ABU.h</in>
          <in>AbuReduction.cpp</in>
          <in>AbuReduction.h</in>
          <in>Balancing.cpp</in>
          <in>Balancing.h</in>
          <in>ClusteredMove.cpp</in>
          <in>ClusteredMove.h</in>
          <in>EarlyOpto.cpp</in>
          <in>EarlyOpto.h</in>
          <in>ISPD16Flow.cpp</in>
          <in>ISPD16Flow.h</in>
          <in>LoadOptimization.cpp</in>
          <in>LoadOptimization.h</in>
        </df>
        <df name="ispd18">
          <in>Guide.h</in>
          <in>RoutingGuide.cpp</in>
          <in>RoutingGuide.h</in>
        </df>
      </df>
      <df name="gui">
        <df name="dialog">
          <in>PropertyDialog.cpp</in>
          <in>PropertyDialog.h</in>
        </df>
        <df name="graphics">
          <in>GraphicsItem.h</in>
          <in>GraphicsItemGridLookup.cpp</in>
          <in>GraphicsItemGridLookup.h</in>
          <in>GraphicsItemLookup.h</in>
          <in>GraphicsLayer.cpp</in>
          <in>GraphicsLayer.h</in>
          <in>GraphicsScene.cpp</in>
          <in>GraphicsScene.h</in>
          <in>GraphicsStipple.cpp</in>
          <in>GraphicsStipple.h</in>
          <in>GraphicsView.cpp</in>
          <in>GraphicsView.h</in>
          <in>LayoutGraphicsLayer.cpp</in>
          <in>LayoutGraphicsLayer.h</in>
          <in>LayoutGraphicsScene.cpp</in>
          <in>LayoutGraphicsScene.h</in>
          <in>LayoutGraphicsView.cpp</in>
          <in>LayoutGraphicsView.h</in>
        </df>
        <df name="objects">
          <in>Cell.cpp</in>
          <in>Cell.h</in>
          <in>Floorplan.cpp</in>
          <in>Floorplan.h</in>
          <in>Instance.cpp</in>
          <in>Instance.h</in>
          <in>Macro.cpp</in>
          <in>Macro.h</in>
          <in>Net.h</in>
          <in>PinMgr.cpp</in>
          <in>PinMgr.h</in>
          <in>Port.cpp</in>
          <in>Port.h</in>
          <in>Rect.cpp</in>
          <in>Rect.h</in>
          <in>Routing.cpp</in>
          <in>Routing.h</in>
          <in>StandardCell.cpp</in>
          <in>StandardCell.h</in>
          <in>Via.cpp</in>
          <in>Via.h</in>
          <in>Wire.cpp</in>
          <in>Wire.h</in>
        </df>
        <df name="overlay">
          <in>DensityGridOverlay.cpp</in>
          <in>DensityGridOverlay.h</in>
          <in>ExampleOverlay.cpp</in>
          <in>ExampleOverlay.h</in>
          <in>Register.cpp</in>
        </df>
        <df name="resource">
          <df name="png">
          </df>
        </df>
        <df name="ui">
        </df>
        <df name="window">
          <in>MainWindow.cpp</in>
          <in>MainWindow.h</in>
        </df>
        <in>QtUtils.cpp</in>
        <in>QtUtils.h</in>
      </df>
      <df name="io">
        <df name="parser">
          <df name="bookshelf">
            <in>BookshelfParser.cpp</in>
            <in>BookshelfParser.h</in>
          </df>
          <df name="guide">
            <in>GuideDescriptor.h</in>
            <in>GuideParser.cpp</in>
            <in>GuideParser.h</in>
          </df>
          <df name="lef_def">
            <in>DEFControlParser.cpp</in>
            <in>DEFControlParser.h</in>
            <in>LEFControlParser.cpp</in>
            <in>LEFControlParser.h</in>
          </df>
          <df name="liberty">
            <in>LibertyControlParser.cpp</in>
            <in>LibertyControlParser.h</in>
          </df>
          <df name="operations">
            <in>OperationsControlParser.cpp</in>
            <in>OperationsControlParser.h</in>
          </df>
          <df name="sdc">
            <in>SDCControlParser.cpp</in>
            <in>SDCControlParser.h</in>
          </df>
          <df name="spef">
            <in>SPEFControlParser.cpp</in>
            <in>SPEFControlParser.h</in>
          </df>
          <df name="verilog">
            <in>FlexLexerCopy.h</in>
            <in>SimplifiedVerilog.tab.cc</in>
            <in>SimplifiedVerilog.tab.hh</in>
            <in>SimplifiedVerilog.yy.cc</in>
            <in>SimplifiedVerilogReader.cpp</in>
            <in>SimplifiedVerilogReader.h</in>
            <in>SimplifiedVerilogScanner.h</in>
            <in>location.hh</in>
            <in>position.hh</in>
            <in>stack.hh</in>
          </df>
          <in>parser_helper.cpp</in>
          <in>parser_helper.h</in>
        </df>
        <df name="reader">
          <in>BookshelfReader.cpp</in>
          <in>BookshelfReader.h</in>
          <in>DesignPositionReader.cpp</in>
          <in>DesignPositionReader.h</in>
          <in>GenericReader.cpp</in>
          <in>GenericReader.h</in>
          <in>ICCAD15Reader.cpp</in>
          <in>ICCAD15Reader.h</in>
          <in>ICCAD15ReaderExtended.cpp</in>
          <in>ICCAD15ReaderExtended.h</in>
          <in>ICCAD17Reader.cpp</in>
          <in>ICCAD17Reader.h</in>
          <in>ISPD2012Reader.cpp</in>
          <in>ISPD2012Reader.h</in>
          <in>ISPD2014Reader.cpp</in>
          <in>ISPD2014Reader.h</in>
          <in>ISPD2018Reader.cpp</in>
          <in>ISPD2018Reader.h</in>
          <in>PopulateRsyn.cpp</in>
          <in>PopulateRsyn.h</in>
          <in>SizingISPDReader.cpp</in>
          <in>SizingISPDReader.h</in>
        </df>
        <df name="writer">
          <in>Writer.cpp</in>
          <in>Writer.h</in>
          <in>WriterDEF.cpp</in>
          <in>WriterDEF.h</in>
        </df>
        <in>Graphics.cpp</in>
        <in>Graphics.h</in>
        <in>Report.cpp</in>
        <in>Report.h</in>
      </df>
      <df name="phy">
        <df name="obj">
          <df name="impl">
            <in>PhysicalDesign.cpp</in>
          </df>
        </df>
        <df name="util">
          <in>BookshelfMapper.cpp</in>
          <in>PhysicalLayerUtil.cpp</in>
          <in>PhysicalTransform.cpp</in>
        </df>
        <in>PhysicalRouting.cpp</in>
        <in>PhysicalService.cpp</in>
        <in>PhysicalService.h</in>
      </df>
      <df name="sandbox">
        <df name="infra">
          <in>Attribute.h</in>
        </df>
        <df name="obj">
          <df name="data">
            <in>Arc.h</in>
            <in>Cell.h</in>
            <in>Instance.h</in>
            <in>Net.h</in>
            <in>Object.h</in>
            <in>Pin.h</in>
            <in>Port.h</in>
            <in>Sandbox.h</in>
          </df>
          <df name="decl">
            <in>Arc.h</in>
            <in>Cell.h</in>
            <in>Instance.h</in>
            <in>Net.h</in>
            <in>Object.h</in>
            <in>Pin.h</in>
            <in>Port.h</in>
            <in>Sandbox.h</in>
          </df>
          <df name="impl">
            <in>Arc.h</in>
            <in>Cell.h</in>
            <in>Instance.h</in>
            <in>Net.h</in>
            <in>Object.h</in>
            <in>Pin.h</in>
            <in>Port.h</in>
            <in>Sandbox.h</in>
          </df>
        </df>
        <in>Sandbox.h</in>
      </df>
      <df name="script">
        <in>FlexLexerCopy.h</in>
        <in>Script.tab.cc</in>
        <in>Script.tab.hh</in>
        <in>Script.yy.cc</in>
        <in>ScriptCommand.h</in>
        <in>ScriptReader.cpp</in>
        <in>ScriptReader.h</in>
        <in>ScriptScanner.h</in>
        <in>location.hh</in>
        <in>position.hh</in>
        <in>stack.hh</in>
      </df>
      <df name="session">
        <in>Message.cpp</in>
        <in>Message.h</in>
        <in>Process.h</in>
        <in>Reader.h</in>
        <in>Service.h</in>
        <in>Session.cpp</in>
        <in>Session.h</in>
        <in>SessionObserver.cpp</in>
        <in>SessionObserver.h</in>
      </df>
      <df name="setup">
        <in>Message.cpp</in>
        <in>Process.cpp</in>
        <in>Reader.cpp</in>
        <in>Service.cpp</in>
      </df>
      <df name="shell">
        <in>Shell.cpp</in>
        <in>Shell.h</in>
      </df>
      <df name="tool">
        <df name="congestion">
          <in>DensityGrid.cpp</in>
          <in>DensityGrid.h</in>
          <in>DensityGridBin.h</in>
          <in>DensityGridBlockage.h</in>
          <in>DensityGridType.h</in>
        </df>
        <df name="fastplace">
          <in>FastPlace.cpp</in>
          <in>FastPlace.h</in>
        </df>
        <df name="fastroute">
          <in>FastRoute.cpp</in>
          <in>FastRoute.h</in>
        </df>
        <df name="jezz">
          <in>Jezz.cpp</in>
          <in>Jezz.h</in>
        </df>
        <df name="library">
          <in>LibraryCharacterizer.cpp</in>
          <in>LibraryCharacterizer.h</in>
        </df>
        <df name="lnalg">
          <in>lnalg.cpp</in>
          <in>lnalg.h</in>
          <in>scrm.cpp</in>
          <in>scrm.h</in>
        </df>
        <df name="qpdp">
          <in>IncrementalTimingDrivenQP.cpp</in>
          <in>IncrementalTimingDrivenQP.h</in>
          <in>QpdpB2B.cpp</in>
          <in>QpdpbB2B.h</in>
          <in>RelaxedPinPosition.cpp</in>
          <in>RelaxedPinPosition.h</in>
          <in>TDQuadraticFlow.cpp</in>
          <in>TDQuadraticFlow.h</in>
        </df>
        <df name="routing">
          <in>DefaultRoutingEstimationModel.cpp</in>
          <in>DefaultRoutingEstimationModel.h</in>
          <in>DefaultRoutingExtractionModel.cpp</in>
          <in>DefaultRoutingExtractionModel.h</in>
          <in>RCTree.h</in>
          <in>RoutingEstimationModel.h</in>
          <in>RoutingEstimator.cpp</in>
          <in>RoutingEstimator.h</in>
          <in>RoutingExtractionModel.h</in>
          <in>RoutingTopology.h</in>
          <in>RsttRoutingEstimatorModel.cpp</in>
          <in>RsttRoutingEstimatorModel.h</in>
        </df>
        <df name="scenario">
          <in>Scenario.cpp</in>
          <in>Scenario.h</in>
        </df>
        <df name="timing">
          <in>DefaultTimingModel.cpp</in>
          <in>DefaultTimingModel.h</in>
          <in>DefaultTimingModelWithIdealClock.h</in>
          <in>EdgeArray.h</in>
          <in>SandboxTimer.cpp</in>
          <in>SandboxTimer.h</in>
          <in>Timer.cpp</in>
          <in>Timer.h</in>
          <in>TimingArc.h</in>
          <in>TimingLibraryArc.h</in>
          <in>TimingLibraryCell.h</in>
          <in>TimingLibraryPin.h</in>
          <in>TimingModel.h</in>
          <in>TimingNet.h</in>
          <in>TimingPin.h</in>
          <in>TimingTypes.h</in>
        </df>
      </df>
      <df name="util">
        <in>Array.h</in>
        <in>AsciiProgressBar.h</in>
        <in>BlockageControl.cpp</in>
        <in>BlockageControl.h</in>
        <in>Bounds.h</in>
        <in>Color.h</in>
        <in>Colorize.h</in>
        <in>DBU.h</in>
        <in>Debug.h</in>
        <in>Dim.h</in>
        <in>Double2.h</in>
        <in>DoubleRectangle.h</in>
        <in>Environment.h</in>
        <in>Exception.h</in>
        <in>Float2.h</in>
        <in>FloatRectangle.h</in>
        <in>FloatingPoint.h</in>
        <in>Histogram.cpp</in>
        <in>Histogram.h</in>
        <in>Json.h</in>
        <in>Logger.cpp</in>
        <in>Logger.h</in>
        <in>MD5.h</in>
        <in>MemoryUsage.h</in>
        <in>NetlistExtractor.cpp</in>
        <in>NetlistExtractor.h</in>
        <in>Point.h</in>
        <in>Polygon.cpp</in>
        <in>Polygon.h</in>
        <in>Proxy.h</in>
        <in>RCTreeExtractor.cpp</in>
        <in>RCTreeExtractor.h</in>
        <in>RangeBasedLoop.h</in>
        <in>Rect.cpp</in>
        <in>Rect.h</in>
        <in>Stepwatch.cpp</in>
        <in>Stepwatch.h</in>
        <in>Stipple.h</in>
        <in>Stopwatch.h</in>
        <in>StreamLogger.cpp</in>
        <in>StreamLogger.h</in>
        <in>StreamMirror.h</in>
        <in>StreamStateSaver.h</in>
        <in>String.h</in>
        <in>ThreadPool.h</in>
        <in>TristateFlag.h</in>
        <in>UnitTest.h</in>
        <in>Units.h</in>
      </df>
      <in>main.cpp</in>
    </df>
  </logicalFolder>
  <projectmakefile>../../build/Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>../../build</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
