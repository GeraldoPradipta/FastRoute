#!/usr/bin/python

# Guilherme Flach - 2017/03/18

# This script updates the copyright message at the header of source files by
# replacing the old one (if any) with a new one.
#
# In order to to identify the old copyright message, the script looks for
# a line containing both strings "/* Copryright" and "Rsyn". Then it skips
# all lines till it finds a "*/".

import os
import sys

copyright = """/* Copyright 2014-2018 Rsyn
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 """

def updateHeader(filename):
	# Read file
	file = open(filename, 'r')
	lines = [line for line in file]
	file.close()

	# Remove old copyright message.
	start = -1
	end = -1
	counter = 0;
	for line in lines:
		if start == -1:
			if "/* Copyright" in line and "Rsyn" in line:
				start = counter;
		elif end == -1:
			if "*/" in line:
				end = counter
		else:
			# If we already find the start and end of the old header, keep going
			# until a non-empty line is found.
			if line.strip() != "":
				break
			end = counter
			
		counter += 1
	
	if start != -1 and end != -1:
		del lines[start:end+1]
		
	# Insert copyright notice in the file.
	file = open(filename, 'w')
	file.write(copyright + '\n' + ''.join([line for line in lines]))
	file.close()
	return True

# Source: https://gist.github.com/hrouault/1358474
def query_yes_no(question, default="yes"):
    """Ask a yes/no question via raw_input() and return their answer.
    "question" is a string that is presented to the user.
    "default" is the presumed answer if the user just hits <Enter>.
        It must be "yes" (the default), "no" or None (meaning
        an answer is required of the user).
    The "answer" return value is one of "yes" or "no".
    """
    valid = {"yes":True,   "y":True,  "ye":True,
             "no":False,     "n":False}
    if default == None:
        prompt = " [y/n] "
    elif default == "yes":
        prompt = " [Y/n] "
    elif default == "no":
        prompt = " [y/N] "
    else:
        raise ValueError("invalid default answer: '%s'" % default)

    while True:
        sys.stdout.write(question + prompt)
        choice = raw_input().lower()
        if default is not None and choice == '':
            return valid[default]
        elif choice in valid:
            return valid[choice]
        else:
            sys.stdout.write("Please respond with 'yes' or 'no' "\
                             "(or 'y' or 'n').\n")
	

# Checks for the correct usage of the script.
# User must pass the directory where the source files reside. 
if len(sys.argv) != 2:
    print("Usage: " + sys.argv[0] + " <dir>")
    sys.exit()
    
# Checks if the directory exists.
dirname = sys.argv[1]
if not os.path.isdir(dirname):
    print("Directory '" + dirname + "' does not exist.")
    sys.exit()

# Gets the absolute path to the directory.
dirname = os.path.abspath(dirname)

# Prompt the use for confirmation.
print("Copyright message will be updated recursively in the following directory:")
print(dirname)
if not query_yes_no("Is that correct?", default="no"):
    sys.exit()

# Traverse root directory, and list directories as dirs and files as files
for root, dirs, files in os.walk(dirname):
    if "3rdparty" in root:
	    print("Skipping 3rd party directory '" + root + "'...")
	    continue

    for file in files:
	    filename = root + os.sep + file
	    if not file.endswith(('.h','.cpp')):
		    continue
	    print("Processing file '" + root + os.sep + file + "'...")
	    updateHeader(filename)
        
