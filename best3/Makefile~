CC = gcc
CFLAGS = -O3 -I.

SRC     = dist.c dl.c err.c heap.c mst2.c neighbors.c \
	bookshelf_IO.c memAlloc.c flute.c flute_mst.c \
	DataProc.c cong.c RSMT.c route.c maze.c EdgeShift.c RipUp.c \
	utility.c maze3D.c
OBJ     = $(SRC:.c=.o)

cr: main.c ${OBJ}  
	$(CC) $(CFLAGS) -o FastRoute main.c ${OBJ} -lm

#flute-net: flute-net.c ${OBJ}
#	$(CC) $(CFLAGS) -o flute-net flute-net.c ${OBJ} -lm

#flute-ckt: flute-ckt.c ${OBJ}
#	$(CC) $(CFLAGS) -o flute-ckt flute-ckt.c ${OBJ} -lm

rand-pts: rand-pts.c
	$(CC) $(CFLAGS) -o rand-pts rand-pts.c 

flute.o: flute.c flute.h
	$(CC) $(CFLAGS) -c -o flute.o flute.c

flute_mst.o: flute_mst.c flute.h
	$(CC) $(CFLAGS) -c -o flute_mst.o flute_mst.c

DataProc.o: DataProc.c DataType.h DataProc.h
	$(CC)  $(CFLAGS) -c -o DataProc.o DataProc.c

cong.o: cong.c cong.h DataType.h DataProc.h
	$(CC)  $(CFLAGS) -c -o cong.o cong.c

RSMT.o: RSMT.c RSMT.h DataType.h DataProc.h flute.h
	$(CC)  $(CFLAGS) -c -o RSMT.o RSMT.c

route.o: route.c route.h DataType.h DataProc.h flute.h
	$(CC)  $(CFLAGS) -c -o route.o route.c

maze.o: maze.c maze.h DataType.h DataProc.h
	$(CC)  $(CFLAGS) -c -o maze.o maze.c

EdgeShift.o: EdgeShift.c EdgeShift.h DataType.h DataProc.h flute.h RipUp.h
	$(CC)  $(CFLAGS) -c -o EdgeShift.o EdgeShift.c

RipUp.o: RipUp.c RipUp.h DataType.h flute.h DataProc.h
	$(CC)  $(CFLAGS) -c -o RipUp.o RipUp.c

utility.o: utility.c utility.h DataType.h DataProc.h
	$(CC)  $(CFLAGS) -c -o utility.o utility.c

maze3D.o: maze3D.c maze3D.h DataType.h DataProc.h
	$(CC)  $(CFLAGS) -c -o maze3D.o maze3D.c







clean:
	rm -f *.o core*

